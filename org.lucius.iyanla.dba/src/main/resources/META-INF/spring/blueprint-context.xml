<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:osgi="http://www.eclipse.org/gemini/blueprint/schema/blueprint"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.eclipse.org/gemini/blueprint/schema/blueprint 
       http://www.eclipse.org/gemini/blueprint/schema/blueprint/gemini-blueprint.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<context:property-placeholder location="osgibundlejar:/META-INF/jdbc.properties" ignore-unresolvable="true" />
	<context:component-scan base-package="org.lucius.iyanla.dba" />

	<tx:annotation-driven transaction-manager="txManager" />
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- 没有使用org.apache.commons.dbcp2.BasicDataSource 因为在OSGI环境下通过Class.forName加载JDBC驱动类的时候会找不到类，
		解决方案可以是在DBCP的import-package中加如mysql的jdbc驱动类，还可以通过自己定义MySQL的数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp2.datasources.SharedPoolDataSource" lazy-init="false" destroy-method="close">
		<property name="connectionPoolDataSource" ref="mysqlDataSource"/>
		<property name="maxTotal" value="10"/>
		<property name="defaultMaxIdle" value="10"/>
		<property name="defaultMaxWaitMillis" value="2000"/>
		<property name="defaultAutoCommit" value="false"/>
		<property name="validationQuery" value="select now()"/>
	</bean>
	
	<bean id="mysqlDataSource" class="com.mysql.cj.jdbc.MysqlConnectionPoolDataSource">
		<property name="url" value="${jdbc.url}"/>
		<property name="user" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
	</bean>
	
	<bean id="sqlSessionFactory" class="org.lucius.iyanla.orm.mybatis.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="osgibundlejar:/META-INF/mybatis.cfg.xml"/>
	</bean>
	
	<osgi:service ref="dataSource" interface="javax.sql.DataSource"/>
	<osgi:service ref="sqlSessionFactory" interface="org.apache.ibatis.session.SqlSessionFactory"/>
	<osgi:service ref="txManager" interface="org.springframework.jdbc.datasource.DataSourceTransactionManager"/>
	

</beans>